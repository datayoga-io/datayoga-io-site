(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{377:function(a,t,e){"use strict";e.r(t);var s=e(45),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[a._v("#")]),a._v(" Getting started")]),a._v(" "),e("h1",{attrs:{id:"pre-requisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisites"}},[a._v("#")]),a._v(" Pre-requisites")]),a._v(" "),e("h2",{attrs:{id:"install-nodejs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-nodejs"}},[a._v("#")]),a._v(" Install NodeJS")]),a._v(" "),e("p",[a._v("https://nodejs.org/en/download/package-manager/")]),a._v(" "),e("h2",{attrs:{id:"install-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-docker"}},[a._v("#")]),a._v(" Install Docker")]),a._v(" "),e("p",[a._v("This is needed for running a local job runner")]),a._v(" "),e("p",[a._v("https://docs.docker.com/get-docker/")]),a._v(" "),e("h1",{attrs:{id:"installing-the-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-cli"}},[a._v("#")]),a._v(" Installing the CLI")]),a._v(" "),e("h2",{attrs:{id:"login-to-github-packages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#login-to-github-packages"}},[a._v("#")]),a._v(" Login to Github packages")]),a._v(" "),e("p",[a._v("Create a personal access token in Github. Go to "),e("code",[a._v("profile settings (top right menu) -> Developer Settings -> Personal Access Tokens")]),a._v(".")]),a._v(" "),e("p",[a._v("Create a token named "),e("code",[a._v("datayoga")]),a._v(" and grant it "),e("code",[a._v("read:packages")]),a._v(" and "),e("code",[a._v("repo")]),a._v(" permissions")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm login --scope=@datayoga-io --registry=https://npm.pkg.github.com\n\n> Username: GITHUB USERNAME\n> Password: TOKEN\n> Email: EMAIL-ADDRESS\n")])])]),e("p",[a._v("For more info see here: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-npm-registry")]),a._v(" "),e("p",[a._v("Create an .npmrc. This is needed since our package is in a private github packages repo")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('echo "@datayoga-io:registry=https://npm.pkg.github.com" > .npmrc\n')])])]),e("p",[a._v("Install the CLI")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm install -g @datayoga-io/datayoga\n")])])]),e("p",[a._v("Verify that the installation completed successfully by running the following command:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("dy-cli --version\n")])])]),e("h2",{attrs:{id:"create-a-new-datayoga-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-new-datayoga-project"}},[a._v("#")]),a._v(" Create a new datayoga project")]),a._v(" "),e("p",[a._v("To create a new datayoga project, use the "),e("code",[a._v("init")]),a._v(" command.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("dy-cli init hello_world\ncd hello_world\n")])])]),e("p",[a._v("You will see a folder structure that scaffolds a new datayoga enviornment.")]),a._v(" "),e("h2",{attrs:{id:"install-local-spark-runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-local-spark-runner"}},[a._v("#")]),a._v(" Install local Spark runner")]),a._v(" "),e("p",[a._v("To run jobs locally, datayoga uses data processing technologies called "),e("code",[a._v("runners")]),a._v(". We provide a packaged docker container with a pre-installed Spark runner.")]),a._v(" "),e("ol",[e("li",[e("strong",[a._v("Log in to github docker repository")])])]),a._v(" "),e("p",[a._v("Save the personal access token in a text file: "),e("code",[a._v("~/.github_docker_token.txt")])]),a._v(" "),e("p",[a._v("Login to docker:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cat ~/.github_docker_token.txt | docker login ghcr.io -u <YOUR_USERNAME> --password-stdin\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[a._v("Run the container")])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it -p 8998:8998 -p 8000:8000 --network host -v $(pwd)/data:/opt/dy/data ghcr.io/datayoga-io/downwarddog/dy-runner-spark:latest\n")])])]),e("ul",[e("li",[e("p",[a._v("Note that we are mapping the volume of "),e("code",[a._v("/opt/dy/data")]),a._v(" to the folder named "),e("code",[a._v("data")]),a._v(". If you are running this from the datayoga project home folder, this should have been created as part of the "),e("code",[a._v("init")]),a._v(" command. You can point this volume to any local folder that holds the input files that the jobs would need to load.")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("--network host")]),a._v(" is needed to enable the container to access resources on the local machine (e.g. a local database)")])])]),a._v(" "),e("h2",{attrs:{id:"validating-the-install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#validating-the-install"}},[a._v("#")]),a._v(" Validating the install")]),a._v(" "),e("p",[a._v("Let's run our first job. It is pre-defined in the samples folder as part of the "),e("code",[a._v("init")]),a._v(" command.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("dy-cli run hello\n")])])]),e("p",[a._v("If all goes well, you should see some startup logs, and eventually:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("+-----+-----+\n|   id| name|\n+-----+-----+\n|hello|world|\n+-----+-----+\n")])])]),e("p",[a._v("That's it! You've created your first job that loads data from CSV, runs it through Spark, and shows the data to the standard output. Not very useful, but a good start. Read on for a more detailed tutorial or check out the reference to see the different block types currently available.")])])}),[],!1,null,null,null);t.default=r.exports}}]);