(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{398:function(t,e,o){"use strict";o.r(e);var r=o(46),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"join"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" Join")]),t._v(" "),o("p",[t._v("Join two dataframes")]),t._v(" "),o("h2",{attrs:{id:"condition"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#condition"}},[t._v("#")]),t._v(" condition")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("Type: "),o("code",[t._v("string")])])]),t._v(" "),o("li",[o("p",[t._v("Description: An SQL expression to use for the join. Use the alias "),o("code",[t._v("left")]),t._v(" and "),o("code",[t._v("right")]),t._v(" to reference duplicate column names")])]),t._v(" "),o("li",[o("p",[t._v("Examples:\n"),o("code",[t._v("(right.country_code = left.country_code) AND (right.continent = 'europe')")])])])]),t._v(" "),o("h2",{attrs:{id:"how"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#how"}},[t._v("#")]),t._v(" how")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("Type: "),o("code",[t._v('"inner" | "cross" | "outer" | "full" | "fullouter" | "full_outer" | "left" | "leftouter" | "left_outer" | "right" | "rightouter" | "right_outer" | "semi" | "leftsemi" | "left_semi" | "anti" | "leftanti" | "left_anti"')])])]),t._v(" "),o("li",[o("p",[t._v("Description: type of join to perform. determines how columns that don't have lookup values will be treated")])]),t._v(" "),o("li",[o("p",[t._v("Examples:")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);