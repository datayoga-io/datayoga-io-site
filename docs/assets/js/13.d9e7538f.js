(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{388:function(e,t,s){"use strict";s.r(t);var n=s(45),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"find-delta"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-delta"}},[e._v("#")]),e._v(" Find delta")]),e._v(" "),s("p",[e._v("Find delta between two dataframes")]),e._v(" "),s("h2",{attrs:{id:"business-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#business-keys"}},[e._v("#")]),e._v(" business_keys")]),e._v(" "),s("ul",[s("li",[e._v("Type: "),s("code",[e._v("array")])]),e._v(" "),s("li",[e._v("Description:")])]),e._v(" "),s("p",[e._v("undefined")]),e._v(" "),s("h2",{attrs:{id:"include-deletes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#include-deletes"}},[e._v("#")]),e._v(" include_deletes")]),e._v(" "),s("ul",[s("li",[e._v("Type: "),s("code",[e._v("boolean")])]),e._v(" "),s("li",[e._v("Description: by default, find_delta does not find deletes. Setting this to true will also return deletes")])]),e._v(" "),s("p",[e._v("undefined")]),e._v(" "),s("h2",{attrs:{id:"exclusion-condition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exclusion-condition"}},[e._v("#")]),e._v(" exclusion_condition")]),e._v(" "),s("ul",[s("li",[e._v("Type: "),s("code",[e._v("string")])]),e._v(" "),s("li",[e._v("Description: an sql condition to exclude rows from comparison. Excluded rows will not be present in any of the resulting insert/update/delete")])]),e._v(" "),s("p",[e._v("undefined")])])}),[],!1,null,null,null);t.default=i.exports}}]);