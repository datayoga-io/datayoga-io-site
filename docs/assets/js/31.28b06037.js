(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{389:function(a,e,n){"use strict";n.r(e);var t=n(46),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"dy-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dy-cli"}},[a._v("#")]),a._v(" dy-cli")]),a._v(" "),n("h2",{attrs:{id:"install"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[a._v("#")]),a._v(" Install")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i dy-cli -g\n")])])]),n("h2",{attrs:{id:"usage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[a._v("#")]),a._v(" Usage")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ dy-cli --help\n")])])]),n("p",[a._v("Help output:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("  ____        _      __   __                   ____ _     ___\n |  _ \\  __ _| |_ __ \\ \\ / /__   __ _  __ _   / ___| |   |_ _|\n | | | |/ _` | __/ _` \\ V / _ \\ / _` |/ _` | | |   | |    | |\n | |_| | (_| | || (_| || | (_) | (_| | (_| | | |___| |___ | |\n |____/ \\__,_|\\__\\__,_||_|\\___/ \\__, |\\__,_|  \\____|_____|___|\n                                |___/\n\nCommands:\n  dy-cli init <project>    Scaffold a new folder with all the subdirectories\n  dy-cli exec <pipeline>   Deploy and execute a pipeline from dist folder\n                           against a running datayoga_spark_runner container\n                           (dy-runner-spark)\n  dy-cli run <pipeline>    Build and execute the pipeline against a running\n                           datayoga_spark_runner container (dy-runner-spark)\n  dy-cli validate          Run against a local livy and validate the code is\n                           correct\n  dy-cli build [pipeline]  Builds a yaml and all its dependencies into a dist\n                           folder or tar file\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n")])])]),n("h2",{attrs:{id:"available-commands"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#available-commands"}},[a._v("#")]),a._v(" Available commands")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#init"}},[a._v("init")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#exec"}},[a._v("exec")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#run"}},[a._v("run")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#validate"}},[a._v("validate")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#build"}},[a._v("build")])])]),a._v(" "),n("h3",{attrs:{id:"init"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[a._v("#")]),a._v(" init")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ dy-cli init --help\n")])])]),n("p",[a._v("Help output:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("dy-cli init <project>\n\nScaffold a new folder with all the subdirectories\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n")])])]),n("h3",{attrs:{id:"exec"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[a._v("#")]),a._v(" exec")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ dy-cli "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" --help\n")])])]),n("p",[a._v("Help output:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('dy-cli exec <pipeline>\n\nDeploy and execute a pipeline from dist folder against a running\ndatayoga_spark_runner container (dy-runner-spark)\n\nPositionals:\n  pipeline  Pipeline id to run                               [string] [required]\n\nOptions:\n  --help      Show help                                                [boolean]\n  --version   Show version number                                      [boolean]\n  --host      Host                               [string] [default: "localhost"]\n  --port      Port                                      [number] [default: 8998]\n  --runner    Runner to use                             [string] [default: "js"]\n  --loglevel  Logging level\n      [string] [choices: "INFO", "ERROR", "DEBUG", "TRACE", "WARNING"] [default:\n                                                                         "INFO"]\n')])])]),n("h3",{attrs:{id:"run"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[a._v("#")]),a._v(" run")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ dy-cli run --help\n")])])]),n("p",[a._v("Help output:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('dy-cli run <pipeline>\n\nBuild and execute the pipeline against a running datayoga_spark_runner container\n(dy-runner-spark)\n\nPositionals:\n  pipeline  pipeline id to run                               [string] [required]\n\nOptions:\n  --help      Show help                                                [boolean]\n  --version   Show version number                                      [boolean]\n  --host      Host                               [string] [default: "localhost"]\n  --port      Port                                      [number] [default: 8998]\n  --local     whether to run locally or remote         [boolean] [default: true]\n  --loglevel  Logging level\n      [string] [choices: "INFO", "ERROR", "DEBUG", "TRACE", "WARNING"] [default:\n                                                                         "INFO"]\n')])])]),n("h3",{attrs:{id:"validate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#validate"}},[a._v("#")]),a._v(" validate")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ dy-cli validate --help\n")])])]),n("p",[a._v("Help output:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('dy-cli validate\n\nRun against a local livy and validate the code is correct\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n  --host     Host                                [string] [default: "localhost"]\n  --port     Port                                       [number] [default: 8998]\n')])])]),n("h3",{attrs:{id:"build"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[a._v("#")]),a._v(" build")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("$ dy-cli build --help\n")])])]),n("p",[a._v("Help output:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('dy-cli build [pipeline]\n\nBuilds a yaml and all its dependencies into a dist folder or tar file\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n  --clean    clear the dist folder                    [boolean] [default: false]\n  --runner   runner to use as a runtime target. e.g. pyspark\n                                                   [string] [default: "pyspark"]\n  --console  print generated code to console          [boolean] [default: false]\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);